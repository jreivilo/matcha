
services:
  backend:
    build: ./backend
    container_name: matcha-backend
    environment:
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_SALT=${SALT}
      - MAILERSEND_API_KEY=${MAILERSEND_API_KEY}
    ports: #expose outside for debugging
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy #wait for db to be ready
    networks:
      - matcha-networks
    volumes:
      - ./backend/src:/usr/src/app/src
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: matcha-frontend
    environment:
      - PORT=${FRONTEND_PORT}
      - REACT_APP_BACKEND_URL=${BACKEND_URL}
      - VITE_BACKEND_URL=${BACKEND_URL}
    ports:
      - "4000:4000"
    depends_on:
      - backend
    networks:
      - matcha-networks
    volumes:
      - ./frontend/src:/usr/src/app/src
    restart: unless-stopped
  db:
    build: ./db/
    container_name: matcha-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_PORT: ${DB_PORT}
    ports:
      - "3306:3306"
    volumes:
      - ./db/data:/var/lib/mysql
    networks:
      - matcha-networks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      start_period: 10s
    restart: unless-stopped

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: pepa
    networks:
      - matcha-networks
    depends_on:
      db:
        condition: service_healthy


networks:
  matcha-networks:
    driver: bridge

volumes:
  db-data: