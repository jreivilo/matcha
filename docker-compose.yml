services:
  backend:
    build: ./backend
    container_name: matcha-backend
    environment:
      - DATABASE_NAME=${DB_NAME}
      - DATABASE_USER=${DB_USER}
      - DATABASE_PASSWORD=${DB_PASSWORD}
      - DATABASE_HOST=${DB_HOST}
      - DATABASE_PORT=${DB_PORT}
      - DATABASE_SALT=${SALT}
      - MAIL_API_KEY=${MAIL_API_KEY}
      - DEV_MODE=${DEV_MODE}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - matcha-networks
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./db/profile_image:/usr/src/app/profile_image
    restart: unless-stopped
    extra_hosts:
      - "api.postmarkapp.com:52.14.206.213"
      - "api.postmarkapp.com:52.14.145.215"
      - "api.postmarkapp.com:3.19.40.22"

  nginx:
    image: nginx:latest
    container_name: matcha-nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
    ports:
      - "4000:80"
    depends_on:
      - backend
    networks:
      - matcha-networks
    restart: unless-stopped

  frontend-build:
    image: node:18
    container_name: matcha-frontend-build
    working_dir: /usr/src/app
    environment:
      - VITE_BACKEND_URL=${BUILD_BACKEND_URL}
    volumes:
      - ./frontend:/usr/src/app
      - ./frontend/dist:/usr/src/app/dist
    command: ["npm", "run", "build"]
    networks:
      - matcha-networks

  db: 
    build: ./db/
    container_name: matcha-db
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_PORT: ${DB_PORT}
    ports:
      - "4242:3306"
    volumes:
      - ./db/data:/var/lib/mysql
    networks:
      - matcha-networks
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      start_period: 10s
    restart: unless-stopped

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: pepa
    networks:
      - matcha-networks
    depends_on:
      db:
        condition: service_healthy

networks:
  matcha-networks:
    driver: bridge

volumes:
  frontend-dist:
